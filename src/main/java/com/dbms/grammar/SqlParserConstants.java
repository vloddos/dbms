/* Generated By:JavaCC: Do not edit this line. SqlParserConstants.java */
package com.dbms.grammar;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SqlParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int CREATE = 7;
    /**
     * RegularExpression Id.
     */
    int DATABASE = 8;
    /**
     * RegularExpression Id.
     */
    int DELETE = 9;
    /**
     * RegularExpression Id.
     */
    int DROP = 10;
    /**
     * RegularExpression Id.
     */
    int EXIT = 11;
    /**
     * RegularExpression Id.
     */
    int FROM = 12;
    /**
     * RegularExpression Id.
     */
    int INSERT = 13;
    /**
     * RegularExpression Id.
     */
    int INTO = 14;
    /**
     * RegularExpression Id.
     */
    int LIMIT = 15;
    /**
     * RegularExpression Id.
     */
    int OFFSET = 16;
    /**
     * RegularExpression Id.
     */
    int SELECT = 17;
    /**
     * RegularExpression Id.
     */
    int SET = 18;
    /**
     * RegularExpression Id.
     */
    int SHOW = 19;
    /**
     * RegularExpression Id.
     */
    int TABLE = 20;
    /**
     * RegularExpression Id.
     */
    int UPDATE = 21;
    /**
     * RegularExpression Id.
     */
    int USE = 22;
    /**
     * RegularExpression Id.
     */
    int VALUES = 23;
    /**
     * RegularExpression Id.
     */
    int WHERE = 24;
    /**
     * RegularExpression Id.
     */
    int COMPARE = 25;
    /**
     * RegularExpression Id.
     */
    int STRING_LITERAL = 26;
    /**
     * RegularExpression Id.
     */
    int MATH_OPERATION_LITEARAL = 27;
    /**
     * RegularExpression Id.
     */
    int STAR = 28;
    /**
     * RegularExpression Id.
     */
    int SEMICOLON = 29;
    /**
     * RegularExpression Id.
     */
    int SINGLE_MARK = 30;
    /**
     * RegularExpression Id.
     */
    int OPEN_BRACKET = 31;
    /**
     * RegularExpression Id.
     */
    int CLOSE_BRACKET = 32;
    /**
     * RegularExpression Id.
     */
    int COMMA = 33;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\"\\n\"",
            "\"\\r\"",
            "\"\\r\\n\"",
            "\"\\\\\"",
            "\"\\t\"",
            "\" \"",
            "\"CREATE\"",
            "\"DATABASE\"",
            "\"DELETE\"",
            "\"DROP\"",
            "\"EXIT\"",
            "\"FROM\"",
            "\"INSERT\"",
            "\"INTO\"",
            "\"LIMIT\"",
            "\"OFFSET\"",
            "\"SELECT\"",
            "\"SET\"",
            "\"SHOW\"",
            "\"TABLE\"",
            "\"UPDATE\"",
            "\"USE\"",
            "\"VALUES\"",
            "\"WHERE\"",
            "<COMPARE>",
            "<STRING_LITERAL>",
            "<MATH_OPERATION_LITEARAL>",
            "\"*\"",
            "\";\"",
            "\"\\\'\"",
            "\"(\"",
            "\")\"",
            "\",\"",
    };

}
